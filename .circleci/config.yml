version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@1.1.1
  snyk: snyk/snyk@0.0.10

executors:
  image-scan:
    docker:
      - image: circleci/python:3
    working_directory: ~/app
  builder:
    docker:
      - image: circleci/node:12.18.4-browsers
    working_directory: ~/app

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          keys:
            - dependency-cache-${CACHE_VERSION}-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-${CACHE_VERSION}-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          name: Linter check
          command: npm run lint
      - run:
          command: |
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - assets/stylesheets
            - .cache/Cypress

  test:
    executor: builder
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-${CACHE_VERSION}-{{ checksum "package.json" }}
      - run:
          name: unit tests
          command: npm run test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/unit-test-reports.html

  cypress_integration_tests:
    working_directory: ~/app
    docker:
      - image: circleci/node:12-buster-browsers
      - image: circleci/redis:buster
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run auth wiremock
          command: java -jar wiremock.jar --port 9191
          background: true
      - restore_cache:
          keys:
            - dependency-cache-${CACHE_VERSION}-{{ checksum "package.json" }}
      - run:
          name: Install cypress
          command: npx cypress install
      - run:
          name: Run the node app
          command: npm run start:cypress
          background: true
      - run:
          name: Run Cypress Integration tests
          command: npm run int-test-ci
      - store_test_results:
          path: integration-tests/reports
      - store_artifacts:
          path: integration-tests/videos
      - store_artifacts:
          path: integration-tests/screenshots

  app-scan:
    executor: builder
    steps:
      - checkout
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}'
          organization: 'digital-probation-services'

  image-scan:
    executor: image-scan
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - snyk/scan:
          docker-image-name: 'quay.io/hmpps/risk-assessment-ui:latest'
          target-file: 'Dockerfile'
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/latest'
          organization: 'digital-probation-services'

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - test:
          requires:
            - build
      - cypress_integration_tests:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
          env: "development"
          chart_name: hmpps-risk-assessment-ui
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "development"
          chart_name: hmpps-risk-assessment-ui
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - test
            - cypress_integration_tests
            - build_docker
#      - request-preprod-approval:
#          type: approval
#          requires:
#            - deploy_dev
#      - hmpps/deploy_env:
#          name: deploy_preprod
#          env: "preprod"
#          context: risk-assessment-ui-preprod
#          requires:
#            - request-preprod-approval
#      - request-prod-approval:
#          type: approval
#          requires:
#            - deploy_preprod
#      - hmpps/deploy_env:
#          name: deploy_prod
#          env: "prod"
#          slack_notification: true
#          context: sentence-planning-prod
#          requires:
#            - request-prod-approval

