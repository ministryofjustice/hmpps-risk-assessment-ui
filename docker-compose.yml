version: "3.1"
services:
  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    networks:
      - hmpps
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
    tmpfs:
      - /var/lib/postgresql

  redis:
    image: "redis:6.2.3-alpine"
    networks:
      - hmpps
    container_name: redis
    ports:
      - "6379:6379"

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    depends_on: [nomis-user-roles-api]
    ports:
      - "9090:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/health" ]
    environment:
      - SPRING_PROFILES_ACTIVE=dev,nomis
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0
      - NOMIS_ENDPOINT_URL=http://nomis-user-roles-api:8080

  nomis-user-roles-api:
    image: quay.io/hmpps/nomis-user-roles-api:latest
    networks:
      - hmpps
    container_name: nomis-user-roles-api
    ports:
      - "8102:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - API_BASE_URL_OAUTH=http://hmpps-auth:8080/auth

  offender-assessment-api:
    image: quay.io/hmpps/offender-assessments-api:latest
    restart: always
    networks:
      - hmpps
    container_name: offender-assessment-api
    depends_on: [hmpps-auth]
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - OAUTH_ENDPOINT_URL=http://oauth:9090/auth

  hmpps-assessment-api:
    image: quay.io/hmpps/hmpps-assessments-api:latest
    restart: always
    networks:
      - hmpps
    container_name: hmpps-assessment-api
    depends_on: [hmpps-auth]
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - OAUTH_ENDPOINT_URL=http://oauth:9090/auth
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=DEBUG

  gotenberg:
    image: thecodingmachine/gotenberg:7
    restart: always
    networks:
      - hmpps
    ports:
      - "9099:3000"

  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    networks:
      - hmpps
    environment:
      - LOCALSTACK_SERVICES=${LOCALSTACK_SERVICES-sns,s3}
      - DEBUG=${DEBUG-}
      - PERSISTENCE=${PERSISTENCE-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  localstack-cli:
    image: xueshanf/awscli
    networks:
      - hmpps
    command:
      - /bin/sh
      - -c
      - |
        sleep 30
        aws --version
        aws --endpoint-url=http://localstack:4566 s3 mb s3://hmpps-assessments-s3
        aws --endpoint-url=http://localstack:4566 sns create-topic --name hmpps-assessments-topic
    environment:
      AWS_ACCESS_KEY_ID: UNSET
      AWS_SECRET_ACCESS_KEY: UNSET
      AWS_DEFAULT_REGION: 'eu-west-2'
    depends_on:
    - localstack

networks:
  hmpps:
