{%- from "node_modules/govuk-frontend/govuk/components/input/macro.njk" import govukInput -%}
{%- from "node_modules/govuk-frontend/govuk/components/textarea/macro.njk" import govukTextarea -%}
{%- from "node_modules/govuk-frontend/govuk/components/radios/macro.njk" import govukRadios -%}
{%- from "node_modules/govuk-frontend/govuk/components/checkboxes/macro.njk" import govukCheckboxes -%}
{%- from "node_modules/govuk-frontend/govuk/components/select/macro.njk" import govukSelect -%}
{%- from "node_modules/govuk-frontend/govuk/components/date-input/macro.njk" import govukDateInput -%}
{%- from "node_modules/govuk-frontend/govuk/components/summary-list/macro.njk" import govukSummaryList %}


{# templates for each question type #}
{% set questionAnswer = bodyAnswer or question.answer or '' %}
{% set errorMessage = thisErrorMessage or errors['id-' + question.questionId] %}

{% if question.type == 'group' %}
  <h2 class="govuk-heading-m">
    {{ question.title }}
  </h2>


  {% for question in question.contents %}
      {{ renderQuestion(question, errors, bodyAnswers['id-' + question.questionId]) }}
  {% endfor %}
{% endif %}

{% if question.attributes.readonly == true and (question.questionCode).slice(0, 2) != 'ui'%}
  {% if question.questionText or question.questionAnswer %}

  <!-- {{ question.questionId }} rendered as readonly -->
  {{ govukSummaryList({
    classes: 'govuk-summary-list--no-border govuk-summary-list--no-bottom-margin',
    rows: [
      {
        key: {
          text: question.questionText
        },
        value: {
          html: questionAnswer | safe
        }
      }
    ]
  }) }}
  {% endif %}

{% else %}
  {% set qType = question.answerType %}
  {% set regExp = r/^presentation: link.*/gi %}
  {% if regExp.test(qType) %}
    {%  set linkTarget = question.answerType | extractLink %}
    {% set qType = 'presentation: link' %}
  {% endif %}

  {% if qType == 'numeric' %}
    {% set formClass = question.formClasses + ' numeric' %}
    {% set qType = 'freetext' %}
  {% endif %}

  {% switch qType %}
    {% case 'presentation: heading' %}
      <h2 class="govuk-heading-m">{{ question.questionText }}</h2>
  {% case 'presentation: heading_large' %}
    <h2 class="govuk-heading-l">{{ question.questionText }}</h2>
    {% case 'presentation: divider' %}
      <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">
    {% case 'presentation: link' %}
      <div class="body-link__container"><a href="{{ linkTarget }}" class="govuk-link body-link">{{ question.questionText }}</a></div>

    {% case 'freetext' %}
      {{ govukInput({
        id: 'id-' + question.questionId,
        name: 'id-' + question.questionId,
        value: questionAnswer | encodeHtml | safe,
        formGroup : {
          classes: formClass or question.formClasses
        },
        attributes: question.attributes,
        label: {
          text: question.questionText,
          isPageHeading: false,
          classes: question.questionCode + ' govuk-label--m'
        },
        hint: {
          text: question.helpText
        },
        errorMessage: errorMessage

      }) }}
    {% case 'textarea' %}
      {{ govukTextarea({
        id: 'id-' + question.questionId,
        name: 'id-' + question.questionId,
        value: questionAnswer | encodeHtml | safe,
        formGroup : {
          classes: question.formClasses
        },
        attributes: question.attributes,
        label: {
          text: question.questionText,
          isPageHeading: false,
          classes: question.questionCode + ' govuk-label--m'
        },
        hint: {
          text: question.helpText
        },
        errorMessage: errorMessage
      }) }}
    {% case 'radio' %}
      {{ govukRadios({
        idPrefix: 'id-' + question.questionId,
        name: 'id-' + question.questionId,
        formGroup : {
          classes: question.formClasses
        },
        attributes: question.attributes,
        fieldset: {
          legend: {
            text: question.questionText,
            classes: question.questionCode + ' govuk-label--m'
          }
        },
        items: question.options | default(question.answerSchemas),
        errorMessage: errorMessage,
        isConditional: question.isConditional,
        hint: {
          text: question.helpText
        }
      }) }}
    {% case 'checkbox' %}
      {{ govukCheckboxes({
        idPrefix: 'id-' + question.questionId,
        name: 'id-' + question.questionId,
        formGroup : {
          classes: question.formClasses
        },
        attributes: question.attributes,
        fieldset: {
          legend: {
            text: question.questionText,
            classes: question.questionCode + ' govuk-label--m'
          }
        },
        items: question.options | default(question.answerSchemas),
        errorMessage: errorMessage,
        isConditional: question.isConditional,
        hint: {
          text: question.helpText
        }
      }) }}

    {% case 'dropdown' %}
      {{ govukSelect({
        id: 'id-' + question.questionId,
        name: 'id-' + question.questionId,
        formGroup : {
          classes: question.formClasses
        },
        label: {
          text: question.questionText,
          classes: question.questionCode + ' govuk-label--m'
        },
        attributes: question.attributes,
        items: question.options | default(question.answerSchemas),
        errorMessage: errorMessage,
        isConditional: question.isConditional,
        hint: {
          text: question.helpText
        }
      }) }}

    {% case 'date' %}
      {% if question.answer.length > 0 %}
        {% set answerDay = question.answer | date("DD") %}
        {% set answerMonth = question.answer | date("MM") %}
        {% set answerYear = question.answer | date("YYYY") %}
      {% else %}
        {% set answerDay = '' %}
        {% set answerMonth = '' %}
        {% set answerYear = '' %}
      {% endif %}

      {{ govukDateInput({
        id: 'id-' + question.questionId,
        namePrefix: 'id-' + question.questionId,
        fieldset: {
          legend: {
            text: question.questionText,
            isPageHeading: false,
            classes: question.questionCode + ' govuk-label--m'
          }
        },
        hint: {
          text: question.helpText
        },
        items: [
          {
            classes: "govuk-input--width-2",
            name: "day",
            value: answerDay
          },
          {
            classes: "govuk-input--width-2",
            name: "month",
            value: answerMonth
          },
          {
            classes: "govuk-input--width-4",
            name: "year",
            value: answerYear
          }
        ],
        errorMessage: errorMessage,
        attributes: question.attributes
      }) }}

    {% default %}
      <!-- {{ question.questionId }} - {{ question.answerType }} questions are not currently rendered -->
  {% endswitch %}
{% endif %}
