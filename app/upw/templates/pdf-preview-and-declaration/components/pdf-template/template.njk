{% from "common/templates/components/moj-crest/macro.njk" import renderMojCrest %}
{% from "common/templates/components/read-only-address/macro.njk" import readOnlyAddress %}
{% from "common/templates/components/rosh-widget/macro.njk" import roshWidget %}
{% from "common/templates/components/mappa-widget/macro.njk" import mappaWidget %}

{%- macro renderTableHeading(heading, description) -%}
  <p>
    <strong>{{ heading }}</strong>
  </p>
  {% if description %}
    <p>{{ description }}</p>
  {% endif %}
{%- endmacro -%}

{%- macro renderTable(table) -%}
  <table class="upw-pdf-table">
    {%- if table.caption -%}
      <caption {% if table.captionId  %}id="caption_{{ table.captionId }}"{% endif %}>
        <h3 class="govuk-heading-m">{{ table.caption }}</h3>
        <p>{{ table.captionDescription }}</p>
      </caption>
    {%- endif -%}
    <tbody>
      {% for row in table.rows %}
        {%- if row.condition or row.condition == undefined -%}
          <tr id="{{ row.id }}">
            <th>{{ renderTableHeading(row.heading, row.description) }}</th>
            <td>{{ row.data }}</td>
          </tr>
        {% endif %}
      {% endfor %}
    </tbody>
  </table>
{%- endmacro -%}

{%- macro renderValue(value, description, condition) -%}
  <p>{{ value | default("No data", true) }}</p>
  {% if description and(not condition or condition and value == condition) %}
    <p>{{ description }}</p>
  {% endif %}
{%- endmacro -%}

{%- macro renderDate(value) -%}
  {% if value %}
    <p>{{ value | prettyDate }}</p>
  {% else %}
    <p>No data</p>
  {% endif %}
{%- endmacro -%}

{%- macro renderOffence(code, description) -%}
  <p>
    {% if code %}{{ code }} - {% endif %}{{ description }}</p>
{%- endmacro -%}

{%- macro renderName(firstName, familyName) -%}
  {{ firstName }}
  {{ familyName }}
{%- endmacro -%}

{%- macro renderAliases(firstNames, familyNames) -%}
  <p>
    {% for firstName in firstNames %}
      {%- set familyName = familyNames[loop.index - 1] -%}
      {{ renderName(firstName, familyName)}}
      <br/>
    {% endfor %}
  </p>
{%- endmacro -%}

{%- macro renderRiskFlags(flags) -%}
  {% if flags %}
    <ul class="govuk-list">
      {% for risk in flags %}
        <li>{{ risk.description }}</li>
      {% endfor %}
    </ul>
  {% else %}
    <p>No flags</p>
  {% endif %}
{%- endmacro -%}

{%- macro ifAnswerIsPresent(answer, textIfPresent, textIfNotPresent) -%}
  {%- if answer -%}
    {{ textIfPresent }}
  {%- else -%}
    {{ textIfNotPresent }}
  {%- endif -%}
{%- endmacro -%}

<div class="govuk-body upw-pdf">
  <div class="upw-pdf-header">
    <div class="upw-pdf-header__left">

      {{ renderMojCrest('#000000', 60) }}

      <span>Ministry of Justice</span>
      <span>HMPPS Unpaid work assessment</span>
    </div>
    <div class="upw-pdf-header__right">
      <span class="govuk-tag upw-pdf-header__right-tag">Official Sensitive</span>
    </div>
  </div>

  <div class='govuk-grid-row upw-pdf-title-page'>
    <div class='govuk-grid-column-two-thirds'>

      <div class='title-page-logos'>
        <img class="upw-pdf-title__mojlogo" src="{{ options.imageAssetPath }}MOJ_logo_large.png" height='95'/>
        <img src="{{ options.imageAssetPath }}community-payback-logo.jpg" height='95'/>
      </div>

      <div class='upw-pdf-title-page__body page-break-after'>

        <p class='upw-pdf-title__strapline'>Her Majestyâ€™s Prison & Probation Service</p>
        <h1 class='upw-pdf-title'>Community payback assessment</h1>
        <div class='upw-pdf-title__divider'></div>
        <div class='upw-pdf__details'>
          <p>Prepared by:
              <strong>{{ username }}</strong>
          </p>
          <p>
            <strong>{{ empty | todayPretty }}</strong>
          </p>
        </div>
      </div>
    </div>
  </div>

  <div class='upw-avoid-break'>
    <h2 class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Supervised individual</h2>
    {{ renderTable({
      captionId: "offence_details",
      caption: "Offence details",
      rows: [
        { id: "offence", heading: "Offence", data: renderOffence(assessment.offence.offence, assessment.offence.offenceDescription) },
        { id: "subcode", heading: "Subcode", data: renderOffence(assessment.offence.subCode, assessment.offence.subCodeDescription) },
        { id: "sentence_date", heading: "Sentence date", data: renderValue(assessment.offence.sentenceDate) }
      ]
    }) }}
  </div>
  <div class='upw-avoid-break'>
    {{ renderTable({
      captionId: "personal_details",
      caption: "Personal details",
      rows: [
        { id: "family_name", heading: "Family name", data: renderValue(persistedAnswers["family_name"][0]) },
        { id: "first_name", heading: "First name", data: renderValue(persistedAnswers["first_name"][0]) },
        { id: "dob", heading: "Date of birth", data: renderDate(persistedAnswers["dob"][0]) },
        { id: "crn", heading: "CRN", data: renderValue(persistedAnswers["crn"][0]) },
        { id: "pnc", heading: "PNC", data: renderValue(persistedAnswers["pnc"][0]) },
        { id: "first_name_aliases", heading: "Alias", data: renderAliases(persistedAnswers['first_name_aliases'], persistedAnswers['family_name_aliases']) },
        { id: "ethnicity", heading: "Ethnicity", data: renderValue(persistedAnswers["ethnicity"][0]) }
      ]
    }) }}
  </div>
  <div class='upw-avoid-break'>
    {% set showSexChangeDetails = persistedAnswers["sex_change"] == "YES" %}
    {{ renderTable({
      captionId: "gender_identity",
      caption: "Gender information",
      rows: [
        { id: "gender_identity", heading: "Gender identity", data: renderValue(answers["gender_identity"]) },
        {
          id: "sex_change",
          heading: "Has the individual gone through any part of a process to change the sex they were assigned at birth to the gender they now identify with, or do they intend to?",
          data: renderValue(answers["sex_change"])
        },
        {
          id: "sex_change_details",
          heading: "Give details and discuss placement options with the individual, based on their gender identity.",
          description: "Record their preference and the details of the conversation.",
          condition: showSexChangeDetails,
          data: renderValue(answers["sex_change_details"])
        },
        {
          id: "intersex_or_dsd",
          heading: "Is the individual intersex or do they have a Difference in Sexual Development (DSD)?",
          data: renderValue(answers["intersex_or_dsd"])
        },
        {
          id: "transgender",
          heading: "Do they consider themselves to be transgender or have a transgender history?",
          description: "This could include their name, appearance, the way they dress, taking hormones, or having gender-confrming surgery.",
          data: renderValue(answers["transgender"])
        }
      ]
    }) }}
  </div>
  <div class='upw-avoid-break'>
    {{ renderTable({
      captionId: "contact_details",
      caption: "Contact details",
      rows: [
        {
          id: "contact_address",
          heading: "Address",
          data: readOnlyAddress({
            buildingName: answers["contact_address_building_name"],
            houseNumber: answers["contact_address_house_number"],
            streetName: answers["contact_address_street_name"],
            district: answers["contact_address_district"],
            townOrCity: answers["contact_address_town_or_city"],
            county: answers["contact_address_county"],
            postcode: answers["contact_address_postcode"]
          })
        },
        { id: "contact_mobile_phone_number", heading: "Mobile", data: renderValue(answers["contact_mobile_phone_number"]) },
        { id: "contact_phone_number", heading: "Phone number", data: renderValue(answers["contact_phone_number"]) },
        { id: "contact_email_addresses", heading: "Email", data: renderValue(answers["contact_email_addresses"]) }
      ]
    }) }}
  </div>
  <div class='upw-avoid-break'>
    <h3 id="heading_emergency_contacts" class="govuk-heading-m">Emergency contact details</h3>

    {% if persistedAnswers['emergency_contact_declined'] | hasAnswer("declined") %}
      <span class="upw-declined-details">Individual declined to give an emergency contact</span>
    {% elif persistedAnswers['emergency_contact_details'] and persistedAnswers['emergency_contact_details'].length > 0 %}
      <div id="emergency_contact_details">
        {% for contact in persistedAnswers['emergency_contact_details'] %}
          <h4 class="govuk-heading-s">Emergency contact {{ loop.index }}</h4>
          <div id="emergency_contact_details_{{ loop.index }}">
            {{ renderTable({
              rows: [
                {
                  id: "emergency_contact_details_" + loop.index + "_first_name",
                  heading: "Name",
                  data: renderValue(contact["emergency_contact_first_name"])
                },
                {
                  id: "emergency_contact_details_" + loop.index + "_family_name",
                  heading: "Surname",
                  data: renderValue(contact["emergency_contact_family_name"])
                },
                {
                  id: "emergency_contact_details_" + loop.index + "_relationship",
                  heading: "Relationship to individual",
                  data: renderValue(contact["emergency_contact_relationship"])
                },
                {
                  id: "emergency_contact_details_" + loop.index + "_mobile_phone_number",
                  heading: "Mobile",
                  data: renderValue(contact["emergency_contact_mobile_phone_number"])
                },
                {
                  id: "emergency_contact_details_" + loop.index + "_phone_number",
                  heading: "Phone number",
                  data: renderValue(contact["emergency_contact_phone_number"])
                }
              ]
            }) }}
          </div>
        {% endfor %}
      </div>
    {% endif %}
  </div>
  <div class='upw-avoid-break'>
    <h2 id="heading_risk_of_harm" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Risk of harm in the community</h2>
    <div id="rosh-widget">
      {{ roshWidget(widgets.roshRiskSummary) }}
    </div>
  </div>
  <div class='upw-avoid-break'>
    {{ renderTable({
      rows: [
          { id: "flags-widget", heading: "Delius risk flags (registers)", data: renderRiskFlags(widgets.flags) },
          {
            id: "history_sexual_offending",
            heading: "History of sexual offending?", 
            data: renderValue(
              answers["history_sexual_offending"],
              answers["history_sexual_offending_details"],
              "Yes"
            ) 
          },
          {
            id: "poses_risk_to_children",
            heading: "Individual poses a risk to children?", 
            data: renderValue(
              answers["poses_risk_to_children"],
              answers["poses_risk_to_children_details"],
              "Yes"
            )
          },
          {
            id: "violent_offences",
            heading: "Violent offences?", 
            data: renderValue(
              answers["violent_offences"],
              answers["violent_offences_details"],
              "Yes"
            )
          },
          {
            id: "acquisitive_offending",
            heading: "History of acquisitive offending?", 
            data: renderValue(
              answers["acquisitive_offending"],
              answers["acquisitive_offending_details"],
              "Yes"
            )
          },
          {
            id: "sgo_identifier",
            heading: "Has the individual been involved in serious group offending (SGO)?", 
            data: renderValue(
                answers["sgo_identifier"],
                answers["sgo_identifier_details"],
                "Yes"
            )
          },
          {
            id: "control_issues",
            heading: "Control issues or disruptive behaviour?", 
            data: renderValue(
              answers["control_issues"],
              answers["control_issues_details"],
              "Yes"
            )
          },
          {
            id: "history_of_hate_based_behaviour",
            heading: "History of hate-based attitudes or behaviours?",
            description: "For example, homophobic or racially motivated",
            data: renderValue(
              answers["history_of_hate_based_behaviour"],
              answers["history_of_hate_based_behaviour_details"],
              "Yes"
            )
          },
          {
            id: "high_profile_person",
            heading: "Is the individual vulnerable because they are a high-profile person?",
            description: "For example, they are prominent on social media or are well-known in a particular area.",
            data: renderValue(
              answers["high_profile_person"],
              answers["high_profile_person_details"],
              "Yes"
            )
          },
          {
            id: "additional_rosh_info",
            heading: "Additional risk assessment information?",
            data: renderValue(
              answers["additional_rosh_info"],
              answers["additional_rosh_info_details"],
              "Yes"
            )
          }
      ]
    }) }}
  </div>
  <div class='upw-avoid-break'>
    <h2 id="heading_management_of_risk" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Management of risk</h2>

    {%- set mappaDataRows = [ 
      { id: "mappa_nominal", heading: "MAPPA nominal?", data: renderValue("No") },
      { id: "location_exclusion_criteria", heading: "Location restricted by victim exclusion criteria?", data: renderValue( answers["location_exclusion_criteria"], answers["location_exclusion_criteria_details"], "Yes" ) },
      { id: "restricted_placement", heading: "Close supervision or restricted placement recommended?", data: renderValue( answers["restricted_placement"], answers["restricted_placement_details"], "Yes" ) },
      { id: "no_female_supervisor", heading: "Recommend not to place with female supervisor?", data: renderValue( answers["no_female_supervisor"], answers["no_female_supervisor_details"], "Yes" ) },
      { id: "no_male_supervisor", heading: "Recommend not to place with male supervisor?", data: renderValue( answers["no_male_supervisor"], answers["no_male_supervisor_details"], "Yes" ) },
      { id: "restrictive_orders", heading: "Restrictive orders?", data: renderValue( answers["restrictive_orders"], answers["restrictive_orders_details"], "Yes" ) },
      { id: "risk_management_issues_individual", heading: "Are there any risk management issues for an individual placement?", data: renderValue( answers["risk_management_issues_individual"], answers["risk_management_issues_individual_details"], "Yes" ) },
      { id: "risk_management_issues_supervised_group", heading: "Are there any risk management issues if working in a supervised group?", data: renderValue( answers["risk_management_issues_supervised_group"], answers["risk_management_issues_supervised_group_details"], "Yes" ) },
      { id: "alcohol_drug_issues", heading: "Alcohol or drug issues with health and safety impact?", data: renderValue( answers["alcohol_drug_issues"], answers["alcohol_drug_issues_details"], "Yes" ) } 
    ] -%}
    {%- if widgets.mappa.isNominal != null %}
      <div id="mappa-widget">
        {{ mappaWidget(widgets.mappa) }}
        {% set mappaDataRows = mappaDataRows | shiftArray %}
      </div>
    {% endif %}
  </div>
  <div class='upw-avoid-break'>
    {{ renderTable({ rows: mappaDataRows }) }}
  </div>
  
  {% if widgets.flags | shouldDisplayModernSlaverySection %}
  <div class='upw-avoid-break'>
    <h2 id="heading_management_of_risk" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Modern day slavery</h2>

    {{ renderTable({
      captionId: "modern_day_slavery",
      rows: [
        {
          id: "modern_day_slavery_risks",
          heading: "Are there specific risks  that need to be taken into account?",
          data: renderValue(
              answers["modern_day_slavery_risks"],
              answers["modern_day_slavery_risks_details"],
              "Yes"
          )
        },
        {
          id: "modern_day_slavery_orders",
          heading: "Are there any slavery and trafficking prevention orders or slavery and trafficking risk orders in place?",
          data: renderValue(
              answers["modern_day_slavery_orders"],
              answers["modern_day_slavery_orders_details"],
              "Yes"
          )
        },
        {
          id: "modern_day_slavery_safeguarding",
          heading: "Are there any safeguarding measures that need to be put into place?",
          data: renderValue(
              answers["modern_day_slavery_safeguarding"],
              answers["modern_day_slavery_safeguarding_details"],
              "Yes"
          )
        }
      ]
    }) }}
  </div>
  {% endif %}

  <div class='upw-avoid-break'>
    <h2 id="heading_diversity_information" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Diversity information</h2>

    {%- set showPlacementPreferences = persistedAnswers["gender_identity"] != "MALE" and persistedAnswers["placement_preference"] == "YES" -%}
    {%- set showPlacementPreferencesByGender = persistedAnswers["sex_change"] == "YES" -%}

    {%- if persistedAnswers["requires_interpreter"] == "true" -%}
      {%- set requiresInterpreter = "Yes" -%}
    {%- elif persistedAnswers["requires_interpreter"] == "false" -%}
      {%- set requiresInterpreter = "No" -%}
    {%- endif -%}

    {{ renderTable({
      rows: [
        { id: "language", heading: "Preferred language", data: renderValue(persistedAnswers["language"]) },
        { id: "requires_interpreter", heading: "Interpreter required?", data: renderValue(requiresInterpreter) },
        {
          id: "cultural_religious_adjustment",
          heading: "Are adjustments required for cultural or religious reasons?",
          data: renderValue(
              answers["cultural_religious_adjustment"],
              answers["cultural_religious_adjustment_details"],
              "Yes"
          )
        },
        {
          id: "placement_preferences",
          heading: "Does the individual have any placement preferences?",
          condition: showPlacementPreferences,
          data: renderValue(answers["placement_preferences"])
        }
      ]
    }) }}
  </div>
  <div class='upw-avoid-break'>
    <h2 id="heading_placement_restrictions" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Placement restrictions due to health and other needs</h2>

    {%- set disabilitiesCaptionHeading = "Disabilities and mental health" -%}
    {% if persistedAnswers["active_disabilities"] %}
      {%- set disabilitiesCaptionSubheading = "Disabilities, conditions and adjustments" -%}
      {% if persistedAnswers["active_disabilities"].length %}

        <table id="active_disabilities" class="upw-pdf-table">
          <caption id="caption_active_disabilities">
            <h3 class="govuk-heading-m">{{ disabilitiesCaptionHeading }}</h3>
            <p>{{ disabilitiesCaptionSubheading }}</p>
          </caption>
          <tbody>
            {% for disability in persistedAnswers["active_disabilities"] %}
              <tr id="active_disabilities_{{ loop.index }}">
                <th>{{ disability["code"] | toDisabilityDescription | default(disability["description"]) }}</th>
                <td>
                  <p class="govuk-body">{{ disability["disability_notes"] | default("No further details.") }}</p>
                  <p class="govuk-body">
                    <strong>Adjustments</strong><br>
                    <ul class="govuk-list">
                      {% if disability["disability_adjustments"] %}
                        {% for adjustment in disability["disability_adjustments"] %}
                          <li>{{ adjustment }}</li>
                        {% endfor %}
                      {% else %}
                        <li>None</li>
                      {% endif %}
                    </ul>
                  </p>
                </td>
              </tr>
            {% endfor %}
            <tr id="additional_disabilities">
              <th>
                <p>
                  <strong>Any additional disabilities or health issues that affect the individualâ€™s ability to engage with Community Payback?</strong>
                </p>
              </th>
              <td>
                <p>{{ answers["additional_disabilities"] }}</p>
                {% if answers["additional_disabilities_details"] and answers["additional_disabilities"] == "Yes" %}
                  <p>{{ answers["additional_disabilities_details"] }}</p>
                {% endif %}
              </td>
            </tr>
            <tr id="disabilities">
              <th>
                <p>
                  <strong>Do any of the above affect the individualâ€™s ability to engage with Community Payback?</strong>
                </p>
                <p>Suggest adjustments, if known</p>
                <td>
                  <p>{{ answers["disabilities"] }}</p>
                  {% if answers["disabilities_details"] and answers["disabilities"] == "Yes" %}
                    <p>{{ answers["disabilities_details"] }}</p>
                  {% endif %}
                </td>
              </tr>
            </tbody>
          </table>

        {% else %}

          <h3 id="heading_no_active_disabilities" class="govuk-heading-m">{{ disabilitiesCaptionHeading }}</h3>
          <p>{{ disabilitiesCaptionSubheading }}</p>

          <hr class="govuk-section-break govuk-section-break--visible">
          <p class="govuk-body-l govuk-!-margin-bottom-5 govuk-!-margin-top-5">No details recorded in Delius</p>
          <hr class="govuk-section-break govuk-section-break--visible govuk-!-margin-bottom-5">

        {% endif %}

        {# Otherwise display the old format #}
      {% else %}

        {{ renderTable({
          captionId: "disabilities_and_mental_health",
          caption: disabilitiesCaptionHeading,
          captionDescription: "Does the individual have any of the following?",
          rows: [
            {
              id: "physical_disability",
              heading: "Physical disability",
              data: renderValue(
                  ifAnswerIsPresent(answers["physical_disability"], "Yes", "No"),
                  answers["physical_disability_details"],
                  "Yes"
              )
            },
            {
              id: "learning_disability",
              heading: "Learning disability",
              data: renderValue(
                ifAnswerIsPresent(answers["learning_disability"], "Yes", "No"),
                answers["learning_disability_details"],
                "Yes"
              )
            },
            {
              id: "learning_difficulty",
              heading: "Learning difficulty",
              data: renderValue(
                ifAnswerIsPresent(answers["learning_difficulty"], "Yes", "No"),
                answers["learning_difficulty_details"],
                "Yes"
              )
            },
            {
              id: "mental_health_condition",
              heading: "Mental health condition",
              data: renderValue(
                ifAnswerIsPresent(answers["mental_health_condition"], "Yes", "No"),
                answers["mental_health_condition_details"],
                "Yes"
              )
            },
            {
              id: "additional_disabilities",
              heading: "Any additional disabilities or health issues that affect the individualâ€™s ability to engage with Community Payback?",                        
              data: renderValue(
                answers["additional_disabilities"],
                answers["additional_disabilities_details"],
                "Yes"
              )
            },
            {
              id: "disabilities",
              heading: "Do any of the above affect the individualâ€™s ability to engage with Community Payback?",
              description: "Suggest adjustments, if known",
              data: renderValue(
                answers["disabilities"],
                answers["disabilities_details"],
                "Yes"
              )
            }
          ]
        }) }}

      {% endif %}
    </div>
    <div class='upw-avoid-break'>
      {%- macro renderPregnancyQuestion(value, pregnantDescription, recentlyGivenBirthDescription) -%}
        <p>{{ value | default("No data", true) }}</p>
        {% if pregnantDescription and value == "Pregnant" %}
          <p>{{ pregnantDescription }}</p>
        {% elif recentlyGivenBirthDescription and value == "Recently given birth" %}
          <p>{{ recentlyGivenBirthDescription }}</p>
        {% endif %}
      {%- endmacro -%}

      {{ renderTable({
        captionId: "health_issues",
        caption: "Are there any other health issues that may affect ability to work?",
        rows: [
          {
            id: "allergies",
            heading: "Does the individual have any known allergies?", 
            data: renderValue(
              answers["allergies"],
              answers["allergies_details"],
              "Yes"
            )
          },
          {
            id: "loss_consciousness",
            heading: "Has the individual experienced sudden loss of consciousness?", 
            data: renderValue(
              answers["loss_consciousness"],
              answers["loss_consciousness_details"],
              "Yes"
            )
          },
          {
            id: "epilepsy",
            heading: "Does the individual have epilepsy?", 
            data: renderValue(
              answers["epilepsy"],
              answers["epilepsy_details"],
              "Yes"
            )
          },
          {
            id: "pregnancy",
            heading: "Is the individual pregnant or recently given birth?", 
            data: renderPregnancyQuestion(
              answers["pregnancy"],
              answers["pregnancy_pregnant_details"],
              answers["pregnancy_recently_given_birth_details"]
            )
          },
          {
            id: "other_health_issues",
            heading: "Any other health issues?", 
            data: renderValue(
              answers["other_health_issues"],
              answers["other_health_issues_details"],
              "Yes"
            )
          }
        ]
      }) }}
    </div>
    <div class='upw-avoid-break'>
      <h3 id="heading_gp_details" class="govuk-heading-m">GP Details</h3>

      {% if persistedAnswers['gp_details_declined'] | hasAnswer("declined") %}
        <span class="upw-declined-details">Individual declined to give GP details</span>
      {% elif persistedAnswers['gp_details'] and persistedAnswers['gp_details'].length > 0 %}
        <div id="gp_details">
          {% for gp in persistedAnswers['gp_details'] %}
            <div id="gp_details_{{ loop.index }}">
              <h4 class="govuk-heading-s">GP details</h4>
              {{ renderTable({
              rows: [
                {
                  id: "gp_details_" + loop.index + "_name",
                  heading: "Name",
                  data: renderValue(gp["gp_name"])
                },
                {
                  id: "gp_details_" +  loop.index + "_practice_name",
                  heading: "GP practice name",
                  data: renderValue(gp["gp_practice_name"])
                },
                {
                  id: "gp_details_" +  loop.index + "_address",
                  heading: "Address",
                  data: readOnlyAddress({ 
                    buildingName: gp["gp_address_building_name"],
                    houseNumber: gp["gp_address_house_number"],
                    streetName: gp["gp_address_street_name"],
                    district: gp["gp_address_district"],
                    townOrCity: gp["gp_address_town_or_city"],
                    county: gp["gp_address_county"],
                    postcode: gp["gp_address_postcode"]
                  })
                },
                {
                  id: "gp_details_" +  loop.index + "_phone_number",
                  heading: "Phone number",
                  data: renderValue(gp["gp_phone_number"])
                }
              ]
            }) }}
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    <div class='upw-avoid-break'>
      {%- set hasTravelIssues = answers["travel_information"] == "Yes" -%}

      {{ renderTable({
        captionId: "travel_information",
        caption: "Travel information",
        rows: [
          {
            id: "travel_information",
            heading: "Does the individual have any travel issues that will affect their placement?", 
            data: renderValue(
              answers["travel_information"],
              answers["travel_information_details"],
              "Yes"
            )
          },
          {
            id: "driving_licence",
            heading: "Does the individual have a valid driving licence?", 
            condition: hasTravelIssues,
            data: renderValue(answers["driving_licence"])
          },
          {
            id: "vehicle",
            heading: "Do they have access to a vehicle?", 
            condition: hasTravelIssues,
            data: renderValue(answers["vehicle"])
          },
          {
            id: "public_transport",
            heading: "Is public transport available and accessible to the individual?", 
            condition: hasTravelIssues,
            data: renderValue(answers["public_transport"])
          }
        ]
      }) }}
    </div>
    <div class='upw-avoid-break'>
      {% if persistedAnswers["active_carer_commitments"] %}
        <table class="upw-pdf-table">
          <caption id="caption_carer_commitments">
            <h3 class="govuk-heading-m">Are there carer commitments?</h3>
          </caption>
          <tbody>
            <tr id="active_carer_commitments">
              <th>Carer commitments</th>
              <td>
                <ul class="govuk-list">
                  {% if persistedAnswers["active_carer_commitments"].length %}
                    {% for commitment in persistedAnswers["active_carer_commitments"] %}
                      <li>{{ commitment["subType"] }}</li>
                    {% endfor %}
                  {% else %}
                    <li>None</li>
                  {% endif %}
                </ul>
              </td>
            </tr>
            <tr id="active_carer_commitments_details">
              <th>
                <p>
                  <strong>Additional information</strong>
                </p>
              </th>
              <td>
                {{ renderValue(answers["active_carer_commitments_details"]) }}
              </td>
            </tr>
          </tbody>
        </table>
      {% else %}
        {{ renderTable({
          captionId: "carer_commitments",
          caption: "Carer commitments",
          rows: [
            {
              id: "caring_commitments",
              heading: "Are there carer commitments?",
              data: renderValue(
                answers["caring_commitments"],
                answers["caring_commitments_details"],
                "Yes"
              )
            }
          ]
        }) }}
      {% endif %}
    </div>
    <div class='upw-avoid-break'>
      <h2 id="heading_employment_education_skills" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Employment, Education and skills</h2>

      {%- if persistedAnswers["employment_education"] == "FULLTIME_EDUCATION_EMPLOYMENT" -%}
        {%- set employmentDetails = answers["employment_education_details_fulltime"] -%}
      {%- elif persistedAnswers["employment_education"] == "PARTTIME_EDUCATION_EMPLOYMENT" -%}
        {%- set employmentDetails = answers["employment_education_details_parttime"] -%}
      {%- endif -%}

      {%- if employmentDetails -%}
        {%- set showEmploymentDetails = true -%}
      {%- else -%}
        {%- set showEmploymentDetails = false -%}
      {%- endif -%}

      {{ renderTable({
        rows: [
          {
            id: "employment_education",
            heading: "Employment or education?",
            data: renderValue(answers["employment_education"])
          },
          {
            id: "employment_education_details",
            heading: "Employment or education details (working days, hours etc)",
            data: renderValue(employmentDetails),
            condition: showEmploymentDetails
          },
          {
            id: "reading_writing_difficulties",
            heading: "Does the individual have any difficulties with reading or writing?",
            data: renderValue(
              answers["reading_writing_difficulties"],
              answers["reading_writing_difficulties_details"],
              "Yes"
            )
          },
          {
            id: "work_skills",
            heading: "Does the individual have any work skills or experience that could be used while carrying out Community Payback?",
            data: renderValue(
              answers["work_skills"],
              answers["work_skills_details"],
              "Yes"
            )
          },
          {
            id: "future_work_plans",
            heading: "Does the individual have future work plans that could be supported through a Community Payback placement?",
            description: "For example: retail, gardening etc",
            data: renderValue(
              answers["future_work_plans"],
              answers["future_work_plans_details"],
              "Yes"
            )
          }
        ]
      }) }}
    </div>
    <div class='upw-avoid-break'>
      {%- set showIndividualCommitment = answers["education_training_need"] == "Yes" -%}

      {{ renderTable ({
        captionId: "training_employment",
        caption: "Training & Employment Opportunities",
        captionDescription: "Supervised individuals who are unemployed, at risk of unemployment or whose offending reflects employment related needs are eligible to use up to 30% of their Community Payback hours on education, training and pre-employment activity.",
        rows: [
          {
            id: "education_training_need",
            heading: "Does the individual have an education, training or employment-related need?",
            data: renderValue(
              answers["education_training_need"],
              answers["education_training_need_details"],
              "Yes"
            ) 
          },
          {
            id: "individual_commitment",
            heading: "Does the individual agree to use the maximum entitlement of their hours on this activity?",
            condition: showIndividualCommitment,
            data: renderValue(
              answers["individual_commitment"],
              answers["individual_commitment_details"],
              "No"
            ) 
          }
        ] 
      }) }}
    </div>
    <div class='upw-avoid-break'>
      <h2 id="heading_placement_details" class="govuk-heading-l govuk-!-margin-bottom-4 govuk-!-margin-top-9">Placement details</h2>

      {%- set showIntensiveWorkingSection = persistedAnswers["employment_education"] == "NO" -%}
      {%- if showIntensiveWorkingSection -%}

        {%- set eligibleForIntensiveWorking = persistedAnswers["eligibility_intensive_working"] == "YES" -%}

        {%- if eligibleForIntensiveWorking -%}
          {% set recommendedHoursStartOrder = answers["recommended_hours_start_order"] | default("0") %}
          {% set recommendedHoursMidpointOrder = answers["recommended_hours_start_order"] | default("0") %}
        {%- endif -%}

        {{ renderTable({
          captionId: "intensive_working",
          caption: "Intensive working",
          rows: [
            {
              id: "eligibility_intensive_working",
              heading: "Is the individual eligible for intensive working?",
              data: renderValue(
                answers["eligibility_intensive_working"],
                answers["eligibility_intensive_working_details"],
                "No"
              )
            },
            {
              id: "recommended_hours_start_order",
              heading: "Recommended hours per week in addition to statutory minimum, at the start of the order",
              condition: eligibleForIntensiveWorking,
              data: renderValue(recommendedHoursStartOrder)
            },
            {
              id: "recommended_hours_start_order",
              heading: "Recommended hours per week in addition to statutory minimum, at the midpoint of the order",
              condition: eligibleForIntensiveWorking,
              data: renderValue(recommendedHoursMidpointOrder)
            },
            {
              id: "twenty_eight_hours_working_week_details",
              heading: "At what point should the individual be expected to reach a 28-hour working week?",
              condition: eligibleForIntensiveWorking,
              data: renderValue(answers["twenty_eight_hours_working_week_details"])
            }
          ]
        }) }}
      {%- endif -%}
    </div>
    <div class='upw-avoid-break'>
      <h3 id="heading_availability" class="govuk-heading-m">Availability for Community Payback</h3>

      {% macro ifAnswerHasValue(answer, value, text) %}
        {% if answer and value in answer %}
          {{ text }}
        {% endif %}
      {% endmacro %}

      <table class="upw-pdf-chart">
        <caption id="caption_availability" class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-bottom" colspan="8">When is the individual available for community payback work?</caption>
        <tbody>
          <tr>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right  upw-pdf-chart__cell--border-left"></th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Mon</th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Tues</th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Wed</th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Thurs</th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Fri</th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Sat</th>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">Sun</th>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-left">Morning</th>
            <td id="individual_availability--MONDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "MONDAY_MORNING", "âœ“") }}</td>
            <td id="individual_availability--TUESDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "TUESDAY_MORNING", "âœ“") }}</td>
            <td id="individual_availability--WEDNESDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "WEDNESDAY_MORNING", "âœ“") }}</td>
            <td id="individual_availability--THURSDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "THURSDAY_MORNING", "âœ“") }}</td>
            <td id="individual_availability--FRIDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "FRIDAY_MORNING", "âœ“") }}</td>
            <td id="individual_availability--SATURDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "SATURDAY_MORNING", "âœ“") }}</td>
            <td id="individual_availability--SUNDAY_MORNING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "SUNDAY_MORNING", "âœ“") }}</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-left">Afternoon</th>
            <td id="individual_availability--MONDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "MONDAY_AFTERNOON", "âœ“") }}</td>
            <td id="individual_availability--TUESDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "TUESDAY_AFTERNOON", "âœ“") }}</td>
            <td id="individual_availability--WEDNESDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "WEDNESDAY_AFTERNOON", "âœ“") }}</td>
            <td id="individual_availability--THURSDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "THURSDAY_AFTERNOON", "âœ“") }}</td>
            <td id="individual_availability--FRIDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "FRIDAY_AFTERNOON", "âœ“") }}</td>
            <td id="individual_availability--SATURDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "SATURDAY_AFTERNOON", "âœ“") }}</td>
            <td id="individual_availability--SUNDAY_AFTERNOON" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "SUNDAY_AFTERNOON", "âœ“") }}</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-left">Evening</th>
            <td id="individual_availability--MONDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "MONDAY_EVENING", "âœ“") }}</td>
            <td id="individual_availability--TUESDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "TUESDAY_EVENING", "âœ“") }}</td>
            <td id="individual_availability--WEDNESDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "WEDNESDAY_EVENING", "âœ“") }}</td>
            <td id="individual_availability--THURSDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "THURSDAY_EVENING", "âœ“") }}</td>
            <td id="individual_availability--FRIDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "FRIDAY_EVENING", "âœ“") }}</td>
            <td id="individual_availability--SATURDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "SATURDAY_EVENING", "âœ“") }}</td>
            <td id="individual_availability--SUNDAY_EVENING" class="upw-pdf-chart__cell--eighth upw-pdf-chart__cell--border-bottom upw-pdf-chart__cell--border-right">{{ ifAnswerHasValue(persistedAnswers["individual_availability"], "SUNDAY_EVENING", "âœ“") }}</td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class='upw-avoid-break'>
      {{ renderTable({
        rows: [
          {
            id: "individual_availability_details",
            heading: "Additional availability information",
            data: renderValue(answers["individual_availability_details"])
          }
        ]
      }) }}
    </div>
    <div class='upw-avoid-break'>
      {{ renderTable({
        captionId: "equipment",
        caption: "Equipment",
        rows: [
          {
            id: "male_female_clothing",
            heading: "Male or female clothing required?",
            data: renderValue(answers["male_female_clothing"])
          },
          {
            id: "waterproof_clothing",
            heading: "Waterproof clothing size",
            data: renderValue(answers["waterproof_clothing"])
          },
          {
            id: "footwear_size",
            heading: "Footwear size (UK)",
            data: renderValue(answers["footwear_size"])
          }
        ]
      }) }}
    </div>
    <div class='upw-avoid-break'>
      <h3 id="heading_time_to_complete" class="govuk-heading-m">How long will it take for the individual to complete their hours?</h3>
      <p>Figures are approximate and based on the individual completing 7 hours of work each day.</p>
      <br>
      <table class="upw-pdf-chart">
        <tbody>
          <tr>
            <th class="upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">Number of hours of community payback to complete</th>
            <th class="upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">
              <p>If they work <b>1 day per week</b> they will complete their hours in:</p>
            </th>
            <th class="upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">
              <p>If they work <b>2 days per week</b> they will complete their hours in:</p>
            </th>
            <th class="upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">
              <p>If they work <b>3 days per week</b> they will complete their hours in:</p>
            </th>
            <th class="upw-pdf-chart__cell--mid-grey upw-pdf-chart__cell--border-top">
              <p>If they work <b>4 days per week</b> they will complete their hours in:</p>
            </th>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">50</th>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">7</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">4</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">3</td>
            <td class="upw-pdf-chart__cell--border-top">2</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">100</th>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">15</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">8</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">5</td>
            <td class="upw-pdf-chart__cell--border-top">4</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">150</th>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">22</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">11</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">8</td>
            <td class="upw-pdf-chart__cell--border-top">6</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">200</th>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">29</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">15</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">10</td>
            <td class="upw-pdf-chart__cell--border-top">8</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">250</th>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">36</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">18</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right">12</td>
            <td class="upw-pdf-chart__cell--border-top">9</td>
          </tr>
          <tr>
            <th class="upw-pdf-chart__cell--light-grey upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-bottom">300</th>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-bottom">43</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-bottom">22</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-right upw-pdf-chart__cell--border-bottom">15</td>
            <td class="upw-pdf-chart__cell--border-top upw-pdf-chart__cell--border-bottom">11</td>
          </tr>
        </tbody>
      </table>

      <hr class="upw-section-break--bold">
    </div>

    <p class="upw-pdf-footer">Strictly NO unauthorised disclosure without following the approved disclosure process. Handle as per Government Security Classifications. The information contained in this document remains the property of HMPPS. Dispose of as <strong>OFFICIAL SENSITIVE</strong> waste.</p>

  </div>
</div>
