{% extends "common/templates/layout.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "common/templates/components/question/macro.njk" import renderQuestion %}
{% from "common/templates/components/read-only/macro.njk" import readOnly %}
{% from "common/templates/components/read-only-address/macro.njk" import readOnlyAddress %}
{% from "common/templates/components/widgets/macro.njk" import widgets %}

{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}

{% set backLink = 'task-list' %}

{% block pageTitle %}
{{ pageTitle }}
{% endblock %}

{% block header %}
{% include "common/templates/partials/header.njk" %}
{% endblock %}

{% block content %}
{# include errorSummary partial #}
{{ super() }}

{% set addGpDetails %}
    {{ govukButton({
        text: "Add GP",
        href: 'edit-gp-details/new',
        classes: "govuk-button--secondary"
    }) }}
{% endset %}


<div class="govuk-grid-row">
    <div class="govuk-grid-column-three-quarters">
        <span class="govuk-caption-xl">Placement restrictions due to health and other needs</span>
        <h1 class="govuk-heading-xl">{{ pageTitle }}</h1>
        
        <form method="post" action="{{ action }}">
            <input type="hidden" name="x-csrf-token" value="{{ csrfToken }}">

            {% if rawAnswers['gp_details'].length != 0 %}
                {% for gp in rawAnswers['gp_details'] %}

                    {% if gp['gp_phone_number'][0] %}{% set gpPhoneNumber = gp['gp_phone_number'][0] %}{% else %}{% set gpPhoneNumber = 'No data' %}{%endif%}

                    {{ readOnly({
                        title: 'GP details',
                        editUrl: 'edit-gp-details/' + [loop.index0],
                        removeUrl: 'remove-gp-details/' + [loop.index0],
                        rows: [
                            {
                                key: {
                                text: 'Name'
                            },
                                value: {
                                html: gp['gp_name'][0]
                            }
                            },{
                                key: {
                                text: 'Practice name'
                            },
                                value: {
                                html: gp['gp_practice_name'][0]
                            }
                            },{
                                key: {
                                    text: 'Address'
                                },
                                value: {
                                    html: readOnlyAddress({
                                        buildingName: gp['gp_address_building_name'][0],
                                        houseNumber: gp['gp_address_house_number'][0],
                                        streetName: gp['gp_address_street_name'][0],
                                        district: gp['gp_address_district'][0],
                                        townOrCity: gp['gp_address_town_or_city'][0],
                                        county: gp['gp_address_county'][0],
                                        postcode: gp['gp_address_postcode'][0]
                                    })
                                }
                            },{
                                key: {
                                    text: 'Phone number'
                                },
                                value: {
                                    html: gpPhoneNumber
                                }
                            }
                        ]
                    }) }}

                {% endfor %}
                {{ addGpDetails | safe }}
            {% else %}
                <p class='govuk-body'>No GP details currently in Delius</p>
                {{ addGpDetails | safe }}

                {{ govukCheckboxes({
                    idPrefix: "gp_details_declined",
                    name: "gp_details_declined",
                    errorMessage: errors['gp_details_declined'],
                    items: [
                        {
                            value: "declined",
                            text: "Individual declined to give GP details",
                            checked: rawAnswers['gp_details_declined'] | hasAnswer("declined")
                        }
                    ]
                }) }}
            {% endif %}

            <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible upw-complete-break">
            
            {{ renderQuestion(questions['gp_details_complete'], errors) }}

            <div class="questiongroup-action-buttons">
                {{ govukButton({
                    text: buttonText | default('Save'),
                    classes: 'govuk-!-margin-bottom-3 govuk-!-margin-right-1'
                }) }}
            </div>
        </form>
    </div>
    <div class="govuk-grid-column-one-quarter">
        {{ widgets(widgetData) }}
    </div>
</div>
{% endblock %}
